Traceback (most recent call last):
  File "/Users/adriankriger/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/adriankriger/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/adriankriger/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/adriankriger/miniconda3/envs/geo3D_wrkshp/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/adriankriger/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/adriankriger/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/adriankriger/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
query = """
     [out:json][timeout:30];
    // --when areas have duplicate names given the world has a limited amount of uniquely named places
    area[name='{0}'] ->.b;
    // -- target area ~ can be way or relation
    wr(area.b)[name='{1}'];
    map_to_area -> .a;
        // I want all buildings
        (way['building'](area.a);
        // and relation type=multipolygon ~ to removed courtyards from buildings
        relation["building"]["type"="multipolygon"](area.a);
    );
    out count;
    out geom 2500;
    //out body;
    //>;
    //out skel qt;
    """.format(large, focus)#osm_type, focus)

url = "http://overpass-api.de/api/interpreter"
r = requests.get(url, params={'data': query})
#rr = r.read()
gj = osm2geojson.json2geojson(r.json())
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mConnectionResetError[0m                      Traceback (most recent call last)
File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/urllib3/connectionpool.py:787[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[1;32m    786[0m [38;5;66;03m# Make the request on the HTTPConnection object[39;00m
[0;32m--> 787[0m response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_request[49m[43m([49m
[1;32m    788[0m [43m    [49m[43mconn[49m[43m,[49m
[1;32m    789[0m [43m    [49m[43mmethod[49m[43m,[49m
[1;32m    790[0m [43m    [49m[43murl[49m[43m,[49m
[1;32m    791[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout_obj[49m[43m,[49m
[1;32m    792[0m [43m    [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[1;32m    793[0m [43m    [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[1;32m    794[0m [43m    [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[1;32m    795[0m [43m    [49m[43mretries[49m[38;5;241;43m=[39;49m[43mretries[49m[43m,[49m
[1;32m    796[0m [43m    [49m[43mresponse_conn[49m[38;5;241;43m=[39;49m[43mresponse_conn[49m[43m,[49m
[1;32m    797[0m [43m    [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[43mpreload_content[49m[43m,[49m
[1;32m    798[0m [43m    [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[43mdecode_content[49m[43m,[49m
[1;32m    799[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mresponse_kw[49m[43m,[49m
[1;32m    800[0m [43m[49m[43m)[49m
[1;32m    802[0m [38;5;66;03m# Everything went great![39;00m

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/urllib3/connectionpool.py:534[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[0m
[1;32m    533[0m [38;5;28;01mtry[39;00m:
[0;32m--> 534[0m     response [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43mgetresponse[49m[43m([49m[43m)[49m
[1;32m    535[0m [38;5;28;01mexcept[39;00m (BaseSSLError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m e:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/urllib3/connection.py:516[0m, in [0;36mHTTPConnection.getresponse[0;34m(self)[0m
[1;32m    515[0m [38;5;66;03m# Get the response from http.client.HTTPConnection[39;00m
[0;32m--> 516[0m httplib_response [38;5;241m=[39m [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mgetresponse[49m[43m([49m[43m)[49m
[1;32m    518[0m [38;5;28;01mtry[39;00m:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/http/client.py:1377[0m, in [0;36mHTTPConnection.getresponse[0;34m(self)[0m
[1;32m   1376[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1377[0m     [43mresponse[49m[38;5;241;43m.[39;49m[43mbegin[49m[43m([49m[43m)[49m
[1;32m   1378[0m [38;5;28;01mexcept[39;00m [38;5;167;01mConnectionError[39;00m:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/http/client.py:320[0m, in [0;36mHTTPResponse.begin[0;34m(self)[0m
[1;32m    319[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[0;32m--> 320[0m     version, status, reason [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_read_status[49m[43m([49m[43m)[49m
[1;32m    321[0m     [38;5;28;01mif[39;00m status [38;5;241m!=[39m CONTINUE:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/http/client.py:281[0m, in [0;36mHTTPResponse._read_status[0;34m(self)[0m
[1;32m    280[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21m_read_status[39m([38;5;28mself[39m):
[0;32m--> 281[0m     line [38;5;241m=[39m [38;5;28mstr[39m([38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfp[49m[38;5;241;43m.[39;49m[43mreadline[49m[43m([49m[43m_MAXLINE[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[38;5;241;43m1[39;49m[43m)[49m, [38;5;124m"[39m[38;5;124miso-8859-1[39m[38;5;124m"[39m)
[1;32m    282[0m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(line) [38;5;241m>[39m _MAXLINE:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/socket.py:716[0m, in [0;36mSocketIO.readinto[0;34m(self, b)[0m
[1;32m    715[0m [38;5;28;01mtry[39;00m:
[0;32m--> 716[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_sock[49m[38;5;241;43m.[39;49m[43mrecv_into[49m[43m([49m[43mb[49m[43m)[49m
[1;32m    717[0m [38;5;28;01mexcept[39;00m timeout:

[0;31mConnectionResetError[0m: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

[0;31mProtocolError[0m                             Traceback (most recent call last)
File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/requests/adapters.py:667[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    666[0m [38;5;28;01mtry[39;00m:
[0;32m--> 667[0m     resp [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m
[1;32m    668[0m [43m        [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mmethod[49m[43m,[49m
[1;32m    669[0m [43m        [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m
[1;32m    670[0m [43m        [49m[43mbody[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mbody[49m[43m,[49m
[1;32m    671[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mheaders[49m[43m,[49m
[1;32m    672[0m [43m        [49m[43mredirect[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    673[0m [43m        [49m[43massert_same_host[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    674[0m [43m        [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    675[0m [43m        [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    676[0m [43m        [49m[43mretries[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmax_retries[49m[43m,[49m
[1;32m    677[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[1;32m    678[0m [43m        [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[1;32m    679[0m [43m    [49m[43m)[49m
[1;32m    681[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/urllib3/connectionpool.py:841[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[1;32m    839[0m     new_e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, new_e)
[0;32m--> 841[0m retries [38;5;241m=[39m [43mretries[49m[38;5;241;43m.[39;49m[43mincrement[49m[43m([49m
[1;32m    842[0m [43m    [49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43merror[49m[38;5;241;43m=[39;49m[43mnew_e[49m[43m,[49m[43m [49m[43m_pool[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m_stacktrace[49m[38;5;241;43m=[39;49m[43msys[49m[38;5;241;43m.[39;49m[43mexc_info[49m[43m([49m[43m)[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m
[1;32m    843[0m [43m[49m[43m)[49m
[1;32m    844[0m retries[38;5;241m.[39msleep()

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/urllib3/util/retry.py:474[0m, in [0;36mRetry.increment[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    473[0m [38;5;28;01mif[39;00m read [38;5;129;01mis[39;00m [38;5;28;01mFalse[39;00m [38;5;129;01mor[39;00m method [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_is_method_retryable(method):
[0;32m--> 474[0m     [38;5;28;01mraise[39;00m [43mreraise[49m[43m([49m[38;5;28;43mtype[39;49m[43m([49m[43merror[49m[43m)[49m[43m,[49m[43m [49m[43merror[49m[43m,[49m[43m [49m[43m_stacktrace[49m[43m)[49m
[1;32m    475[0m [38;5;28;01melif[39;00m read [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/urllib3/util/util.py:38[0m, in [0;36mreraise[0;34m(tp, value, tb)[0m
[1;32m     37[0m [38;5;28;01mif[39;00m value[38;5;241m.[39m__traceback__ [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m tb:
[0;32m---> 38[0m     [38;5;28;01mraise[39;00m value[38;5;241m.[39mwith_traceback(tb)
[1;32m     39[0m [38;5;28;01mraise[39;00m value

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/urllib3/connectionpool.py:787[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[1;32m    786[0m [38;5;66;03m# Make the request on the HTTPConnection object[39;00m
[0;32m--> 787[0m response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_request[49m[43m([49m
[1;32m    788[0m [43m    [49m[43mconn[49m[43m,[49m
[1;32m    789[0m [43m    [49m[43mmethod[49m[43m,[49m
[1;32m    790[0m [43m    [49m[43murl[49m[43m,[49m
[1;32m    791[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout_obj[49m[43m,[49m
[1;32m    792[0m [43m    [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[1;32m    793[0m [43m    [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[1;32m    794[0m [43m    [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[1;32m    795[0m [43m    [49m[43mretries[49m[38;5;241;43m=[39;49m[43mretries[49m[43m,[49m
[1;32m    796[0m [43m    [49m[43mresponse_conn[49m[38;5;241;43m=[39;49m[43mresponse_conn[49m[43m,[49m
[1;32m    797[0m [43m    [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[43mpreload_content[49m[43m,[49m
[1;32m    798[0m [43m    [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[43mdecode_content[49m[43m,[49m
[1;32m    799[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mresponse_kw[49m[43m,[49m
[1;32m    800[0m [43m[49m[43m)[49m
[1;32m    802[0m [38;5;66;03m# Everything went great![39;00m

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/urllib3/connectionpool.py:534[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[0m
[1;32m    533[0m [38;5;28;01mtry[39;00m:
[0;32m--> 534[0m     response [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43mgetresponse[49m[43m([49m[43m)[49m
[1;32m    535[0m [38;5;28;01mexcept[39;00m (BaseSSLError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m e:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/urllib3/connection.py:516[0m, in [0;36mHTTPConnection.getresponse[0;34m(self)[0m
[1;32m    515[0m [38;5;66;03m# Get the response from http.client.HTTPConnection[39;00m
[0;32m--> 516[0m httplib_response [38;5;241m=[39m [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mgetresponse[49m[43m([49m[43m)[49m
[1;32m    518[0m [38;5;28;01mtry[39;00m:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/http/client.py:1377[0m, in [0;36mHTTPConnection.getresponse[0;34m(self)[0m
[1;32m   1376[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1377[0m     [43mresponse[49m[38;5;241;43m.[39;49m[43mbegin[49m[43m([49m[43m)[49m
[1;32m   1378[0m [38;5;28;01mexcept[39;00m [38;5;167;01mConnectionError[39;00m:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/http/client.py:320[0m, in [0;36mHTTPResponse.begin[0;34m(self)[0m
[1;32m    319[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[0;32m--> 320[0m     version, status, reason [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_read_status[49m[43m([49m[43m)[49m
[1;32m    321[0m     [38;5;28;01mif[39;00m status [38;5;241m!=[39m CONTINUE:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/http/client.py:281[0m, in [0;36mHTTPResponse._read_status[0;34m(self)[0m
[1;32m    280[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21m_read_status[39m([38;5;28mself[39m):
[0;32m--> 281[0m     line [38;5;241m=[39m [38;5;28mstr[39m([38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfp[49m[38;5;241;43m.[39;49m[43mreadline[49m[43m([49m[43m_MAXLINE[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[38;5;241;43m1[39;49m[43m)[49m, [38;5;124m"[39m[38;5;124miso-8859-1[39m[38;5;124m"[39m)
[1;32m    282[0m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(line) [38;5;241m>[39m _MAXLINE:

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/socket.py:716[0m, in [0;36mSocketIO.readinto[0;34m(self, b)[0m
[1;32m    715[0m [38;5;28;01mtry[39;00m:
[0;32m--> 716[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_sock[49m[38;5;241;43m.[39;49m[43mrecv_into[49m[43m([49m[43mb[49m[43m)[49m
[1;32m    717[0m [38;5;28;01mexcept[39;00m timeout:

[0;31mProtocolError[0m: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
Cell [0;32mIn[3], line 21[0m
[1;32m      1[0m query [38;5;241m=[39m [38;5;124m"""[39m
[1;32m      2[0m [38;5;124m     [out:json][timeout:30];[39m
[1;32m      3[0m [38;5;124m    // --when areas have duplicate names given the world has a limited amount of uniquely named places[39m
[0;32m   (...)[0m
[1;32m     17[0m [38;5;124m    //out skel qt;[39m
[1;32m     18[0m [38;5;124m    [39m[38;5;124m"""[39m[38;5;241m.[39mformat(large, focus)[38;5;66;03m#osm_type, focus)[39;00m
[1;32m     20[0m url [38;5;241m=[39m [38;5;124m"[39m[38;5;124mhttp://overpass-api.de/api/interpreter[39m[38;5;124m"[39m
[0;32m---> 21[0m r [38;5;241m=[39m [43mrequests[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[38;5;241;43m=[39;49m[43m{[49m[38;5;124;43m'[39;49m[38;5;124;43mdata[39;49m[38;5;124;43m'[39;49m[43m:[49m[43m [49m[43mquery[49m[43m}[49m[43m)[49m
[1;32m     22[0m [38;5;66;03m#rr = r.read()[39;00m
[1;32m     23[0m gj [38;5;241m=[39m osm2geojson[38;5;241m.[39mjson2geojson(r[38;5;241m.[39mjson())

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/requests/api.py:73[0m, in [0;36mget[0;34m(url, params, **kwargs)[0m
[1;32m     62[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mget[39m(url, params[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     63[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""Sends a GET request.[39;00m
[1;32m     64[0m 
[1;32m     65[0m [38;5;124;03m    :param url: URL for the new :class:`Request` object.[39;00m
[0;32m   (...)[0m
[1;32m     70[0m [38;5;124;03m    :rtype: requests.Response[39;00m
[1;32m     71[0m [38;5;124;03m    """[39;00m
[0;32m---> 73[0m     [38;5;28;01mreturn[39;00m [43mrequest[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mget[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mparams[49m[38;5;241;43m=[39;49m[43mparams[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/requests/api.py:59[0m, in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     55[0m [38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we[39;00m
[1;32m     56[0m [38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some[39;00m
[1;32m     57[0m [38;5;66;03m# cases, and look like a memory leak in others.[39;00m
[1;32m     58[0m [38;5;28;01mwith[39;00m sessions[38;5;241m.[39mSession() [38;5;28;01mas[39;00m session:
[0;32m---> 59[0m     [38;5;28;01mreturn[39;00m [43msession[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[43mmethod[49m[38;5;241;43m=[39;49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/requests/sessions.py:589[0m, in [0;36mSession.request[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    584[0m send_kwargs [38;5;241m=[39m {
[1;32m    585[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[1;32m    586[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[1;32m    587[0m }
[1;32m    588[0m send_kwargs[38;5;241m.[39mupdate(settings)
[0;32m--> 589[0m resp [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mprep[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43msend_kwargs[49m[43m)[49m
[1;32m    591[0m [38;5;28;01mreturn[39;00m resp

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/requests/sessions.py:703[0m, in [0;36mSession.send[0;34m(self, request, **kwargs)[0m
[1;32m    700[0m start [38;5;241m=[39m preferred_clock()
[1;32m    702[0m [38;5;66;03m# Send the request[39;00m
[0;32m--> 703[0m r [38;5;241m=[39m [43madapter[49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mrequest[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    705[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[1;32m    706[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start

File [0;32m~/miniconda3/envs/geo3D_wrkshp/lib/python3.9/site-packages/requests/adapters.py:682[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    667[0m     resp [38;5;241m=[39m conn[38;5;241m.[39murlopen(
[1;32m    668[0m         method[38;5;241m=[39mrequest[38;5;241m.[39mmethod,
[1;32m    669[0m         url[38;5;241m=[39murl,
[0;32m   (...)[0m
[1;32m    678[0m         chunked[38;5;241m=[39mchunked,
[1;32m    679[0m     )
[1;32m    681[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:
[0;32m--> 682[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(err, request[38;5;241m=[39mrequest)
[1;32m    684[0m [38;5;28;01mexcept[39;00m MaxRetryError [38;5;28;01mas[39;00m e:
[1;32m    685[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(e[38;5;241m.[39mreason, ConnectTimeoutError):
[1;32m    686[0m         [38;5;66;03m# TODO: Remove this in 3.0.0: see #2811[39;00m

[0;31mConnectionError[0m: ('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))

